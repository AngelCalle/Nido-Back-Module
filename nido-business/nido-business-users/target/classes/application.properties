# Nombre de la servicio.
spring.application.name=svc-users
# Genera un numero de puerto de forma aleatoria.
server.port=${PORT:0}

# Instancia de forma random nombre de la aplicaci�n mas un nombre y valor random.
# Configuraci�n para servicios que se quieren escalar de forma autom�tica para el balanceo de cargas.
eureka.instance.instance-id=${spring.application.name}:  ${spring.application.instance_id:${random.value}}

# Indico la direcci�n f�sica de Eureka para la comunicaci�n.
eureka.client.service-url.defaultZone=http://localhost:8761/eureka


## Active profile
spring.profiles.active=default

####### SPRING JPA ############
spring.jpa.database=POSTGRESQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
## JPA/Hibernate
# Se utiliza para registrar y volcar consultas SQL en la salida estándar.
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
# Hibernate ddl auto (create, create-drop, validate, update, none (para usar archivos de creacion))
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.nom_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
####### SPRING JPA ############

####### POSTGRES ############
# Driver controlador de la BBDD
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/caramelousersG
# Usuario con permisos de acceso y escritura.
spring.datasource.username=postgres
# Contraseña del usuario.
spring.datasource.password=Caramelo
####### POSTGRES ############

spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.schema=classpath:/schema-users.sql, classpath:/schema-roles.sql, classpath:/schema-avatars.sql
#spring.datasource.data=classpath:/data-users.sql, classpath:/data-roles.sql, classpath:/data-avatars.sql
spring.datasource.continue-on-error=true
spring.datasource.tomcat.testWhileIdle=true
spring.datasource.tomcat.timeBetweenEvictionRunsMillis=60000
spring.datasource.tomcat.validationQuery=SELECT 1
spring.datasource.platform=postgres

spring.main.banner-mode=off
logging.level.org.hibernate.SQL=debug
logging.level.org.springframework=ERROR

# Anular el comportamiento predeterminado de nuestro Servlet y lanzar en su NoHandlerFoundExceptionlugar,
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false
spring.jackson.serialization.fail-on-empty-beans=false

# Expone todos los endpoind de actoator
management.endpoints.web.exposure.include: "*"
#management.endpoints.web.base-path=/admin
#management.server.port=8090